# Use the official Node.js image.
FROM node:18-alpine AS builder

# Set the working directory.
WORKDIR /front

# Copy the package.json and pnpm-lock.yaml files.
COPY package.json pnpm-lock.yaml ./

# Install pnpm.
RUN npm install -g pnpm

# Install dependencies.
RUN pnpm install --frozen-lockfile

# Copy the rest of the application code.
COPY . .

# Build the Next.js application.
RUN pnpm run build

# Use a lightweight web server to serve the static files (nginx or similar)
# In this example, we are using a minimal node.js environment to serve the app.
FROM node:18-alpine AS runner

# Set the environment variable to production.
ENV NODE_ENV=production

# Set the working directory.
WORKDIR /front

# Copy only the built application from the builder stage.
COPY --from=builder /front/.next ./.next
COPY --from=builder /front/public ./public
COPY --from=builder /front/package.json ./package.json
COPY --from=builder /front/pnpm-lock.yaml ./pnpm-lock.yaml
COPY --from=builder /front/node_modules ./node_modules

# Set the port number for the application.
EXPOSE 3000

# Start the Next.js application in production mode.
CMD ["pnpm", "start"]
